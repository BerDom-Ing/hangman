name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint

    - name: Run static analysis with pylint
      run: |
        pylint app/game.py app/web.py tests/test_game.py --fail-under=8

    - name: Run unit tests
      run: |
        pytest tests/ -v --cov=app --cov-report=xml

    - name: Set up Chrome for Selenium
      uses: browser-actions/setup-chrome@latest

    - name: Start Flask app for AT
      run: |
        export FLASK_APP=app.web
        flask run --host=0.0.0.0 --port=5000 &
        sleep 5
      env:
        FLASK_ENV: testing

    - name: Run Acceptance Tests
      run: |
        behave acceptance_tests/features --no-capture
      env:
        BASE_URL: http://localhost:5000

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3

    - name: Deploy to alwaysdata
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ssh-bernixsoft.alwaysdata.net
        username: ${{ secrets.ALWAYSDATA_USER }}
        key: ${{ secrets.ALWAYSDATA_SSH_KEY }}
        passphrase: ${{ secrets.ALWAYSDATA_SSH_PASSPHRASE }}
        script: |
          cd /home/bernixsoft/www/myapp
          git pull origin main
          source myenv/bin/activate
          pip install -r requirements.txt --quiet
          # Reiniciar la aplicaci√≥n tocando el archivo WSGI
          touch myapp.wsgi
          echo "Deployment completed successfully"